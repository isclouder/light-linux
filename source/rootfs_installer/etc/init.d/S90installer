#!/bin/sh

wipe_mbr() {
    local drive="$1"
    dd if=/dev/zero of="$drive" bs=1024K count=1 2>/dev/null
    local disk_kb_count=$(sfdisk -s "$drive" 2>/dev/null)
    dd if=/dev/zero of="$drive" bs=1024 seek=$(($disk_kb_count - 1)) count=1 2>/dev/null

    #wipe out GPT
    dd if=/dev/zero of=$drive bs=4096 count=35 2>/dev/null
    disk_kb_cnt=$(blockdev --getsz $drive)
    dd if=/dev/zero of=$drive bs=4096 seek=$(($disk_kb_cnt * 512/4096 - 35)) count=35 2>/dev/null

    sync
}

mount_iso() {
    for i in $(cat /proc/cmdline); do
        case $i in
            manager=*)
            pxe_manager=${i#manager=}
                ;;
            iso=*)
            pxe_iso=${i#iso=}
                ;;
        esac
    done

    if [ -z $pxe_manager ]; then
        mount LABEL=light-linux /media
    else
        cd /data/
        mkdir -p /app/config/
        echo $pxe_manager > /app/config/manager
        tftp -g -r $pxe_iso $pxe_manager
        mount $pxe_iso /media
    fi
}

format() {
    local drive="$1"
    wipe_mbr $drive
    parted $drive -s "mklabel loop"
    parted $drive -s "mklabel msdos"
    parted $drive -s "mkpart primary 1M 500M"
    parted $drive -s "mkpart primary 500M 510"
    parted $drive -s "mkpart primary 510M 1024M"
    parted $drive -s "mkpart primary 1024M -1M"
    sync

    major=$(stat -c '%t' "$(readlink -f "$drive")")
    if [ $major = b3 ]; then
        flag=p
    fi
    mkfs.fat ${drive}${flag}1 1>/dev/null
    fatlabel ${drive}${flag}1 boot
    ln -snf ${drive}${flag}1 /dev/disk/by-label/boot
    mkfs.ext4 -L config ${drive}${flag}2 1>/dev/null
    mkfs.ext4 -L app ${drive}${flag}3 1>/dev/null
    mkfs.ext4 -L data ${drive}${flag}4 1>/dev/null
    parted -s $drive set 1 boot on
}

install_copy() {
    mkdir -p /config
    mkdir -p /data
    mkdir -p /app
    mount LABEL=boot /mnt/
    mount LABEL=config /config/
    mount LABEL=data /data/
    mount LABEL=app /app/
    mount_iso

    cp /media/bzImage_target /mnt/bzImage
    cp -R /media/EFI/ /mnt/
    cp -rf /media/app/* /app/
    umount /mnt
    umount /media
    umount /app
    umount /config
    umount /data
    sync
}

ask_yes_or_no() {
    while true;do
        stty -icanon min 0 time 200
        echo -n "Installation process is completed, reboot now (yes or no)?"
        read Arg
        case $Arg in
            Y|y|YES|yes)
              echo "yes"
              reboot
              break;;
            N|n|NO|no)
              echo "no"
              exit;;
             "")
               echo
               echo "auto reboot"
               reboot
               break;;
        esac
    done

    echo "over..."
}

install() {
    clear
    echo "install ..."
    format /dev/mmcblk0 
    install_copy
    ask_yes_or_no
}

start() {
        printf "start installer"
        install 
        echo "start installer OK"
}
stop() {
	echo "stop installer OK"
}
restart() {
	echo "restart installer OK"
}

case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  restart|reload)
	restart
	;;
  *)
	echo "Usage: $0 {start|stop|restart}"
	exit 1
esac

exit $?

